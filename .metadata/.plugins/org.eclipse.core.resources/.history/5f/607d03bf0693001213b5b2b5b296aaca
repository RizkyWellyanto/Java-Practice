/*
 * File: CheckerboardKarel.java
 * ----------------------------
 * When you finish writing it, the CheckerboardKarel class should draw
 * a checkerboard using beepers, as described in Assignment 1.  You
 * should make sure that your program works for all of the sample
 * worlds supplied in the starter folder.
 */

import stanford.karel.*;

public class CheckerboardKarel extends SuperKarel {

	public void run(){
		while(frontIsClear()){
			putBeeper();
			forward();
			forward();
		}
		putBeeper();
	}

	/*
	 *forward
	 *Pre Condition		: move after putting a Beeper
	 *Proccess			: checking wether front is clear or not, if it is, then move forward
	 *					  if it isnt, then move on to 'checkDirection'
	 *Post Condition	: moved two tiles away from the last Beeper
	 */
	
	private void forward() {
		if(frontIsClear()) {
			move();
		}else{
			moveToUpperTile();
			checkDirection();
			}
		}
	
	/*
	 *moveToUpperTile
	 *Pre Condition		: theres a wall in front of Karel
	 *Proccess			: 
	 *Post Condition	: 
	 */
	
	private void moveToUpperTile(){
		turnLeft();
		if(frontIsClear()){
			move();
			if(beepersPresent()){
				turnAround();
				move();
				if(frontIsClear()){
					move();
				}
			}
		}
	}
		
	/*
	 *checkDirection
	 *Pre Condition		: theres a wall in front of Karel
	 *Proccess			: move to the upper tiles, and then checking which directions
	 *					  is free to go to
	 *Post Condition	: facing to a free to go direction
	 */

	private void checkDirection(){
		if(rightIsClear()) {
			turnRight();
		} else if(leftIsClear()){
			turnLeft();
		}else{
			
		}
			
	}
	
}
